{"id":"index.ts","dependencies":[{"name":"C:\\Users\\barau\\bootcamp_fullstackdeveloper\\curso_javascript\\typescript\\package.json","includedInParent":true,"mtime":1657549141277}],"generated":{"js":"// //tipação de variáveis\n// type CachorroSomenteLeitura = {\n//     readonly [I in keyof Cachorro]-?: Cachorro[I];//podemos retirar os elementos opcionais colocando -? após a iteração\n// }\nvar MeuCachorro =\n/** @class */\nfunction () {\n  function MeuCachorro(nome, idade) {\n    this.nome = nome;\n    this.idade = idade;\n  }\n\n  return MeuCachorro;\n}();\n\nvar cao = new MeuCachorro('Apolo', 14);\ncao.idade = 8;\nconsole.log(cao);"},"sourceMaps":{"js":{"mappings":[{"source":"index.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"index.ts","name":null,"original":{"line":125,"column":0},"generated":{"line":2,"column":0}},{"source":"index.ts","name":null,"original":{"line":126,"column":0},"generated":{"line":3,"column":0}},{"source":"index.ts","name":null,"original":{"line":127,"column":0},"generated":{"line":4,"column":0}},{"source":"index.ts","name":null,"original":{"line":129,"column":0},"generated":{"line":5,"column":0}},{"source":"index.ts","name":null,"original":{"line":129,"column":0},"generated":{"line":5,"column":4}},{"source":"index.ts","name":null,"original":{"line":129,"column":0},"generated":{"line":5,"column":15}},{"source":"index.ts","name":null,"original":{"line":129,"column":0},"generated":{"line":6,"column":0}},{"source":"index.ts","name":null,"original":{"line":129,"column":0},"generated":{"line":7,"column":0}},{"source":"index.ts","name":null,"original":{"line":129,"column":0},"generated":{"line":7,"column":12}},{"source":"index.ts","name":null,"original":{"line":134,"column":4},"generated":{"line":8,"column":2}},{"source":"index.ts","name":null,"original":{"line":134,"column":4},"generated":{"line":8,"column":11}},{"source":"index.ts","name":null,"original":{"line":134,"column":4},"generated":{"line":8,"column":22}},{"source":"index.ts","name":null,"original":{"line":134,"column":16},"generated":{"line":8,"column":23}},{"source":"index.ts","name":null,"original":{"line":134,"column":4},"generated":{"line":8,"column":27}},{"source":"index.ts","name":null,"original":{"line":134,"column":22},"generated":{"line":8,"column":29}},{"source":"index.ts","name":null,"original":{"line":134,"column":4},"generated":{"line":8,"column":34}},{"source":"index.ts","name":null,"original":{"line":134,"column":27},"generated":{"line":8,"column":36}},{"source":"index.ts","name":null,"original":{"line":135,"column":8},"generated":{"line":9,"column":4}},{"source":"index.ts","name":null,"original":{"line":135,"column":13},"generated":{"line":9,"column":9}},{"source":"index.ts","name":null,"original":{"line":135,"column":8},"generated":{"line":9,"column":13}},{"source":"index.ts","name":null,"original":{"line":135,"column":20},"generated":{"line":9,"column":16}},{"source":"index.ts","name":null,"original":{"line":135,"column":8},"generated":{"line":9,"column":20}},{"source":"index.ts","name":null,"original":{"line":136,"column":8},"generated":{"line":10,"column":4}},{"source":"index.ts","name":null,"original":{"line":136,"column":13},"generated":{"line":10,"column":9}},{"source":"index.ts","name":null,"original":{"line":136,"column":8},"generated":{"line":10,"column":14}},{"source":"index.ts","name":null,"original":{"line":136,"column":21},"generated":{"line":10,"column":17}},{"source":"index.ts","name":null,"original":{"line":136,"column":8},"generated":{"line":10,"column":22}},{"source":"index.ts","name":null,"original":{"line":137,"column":5},"generated":{"line":11,"column":2}},{"source":"index.ts","name":null,"original":{"line":138,"column":0},"generated":{"line":13,"column":2}},{"source":"index.ts","name":null,"original":{"line":138,"column":0},"generated":{"line":13,"column":9}},{"source":"index.ts","name":null,"original":{"line":138,"column":0},"generated":{"line":13,"column":20}},{"source":"index.ts","name":null,"original":{"line":129,"column":0},"generated":{"line":14,"column":0}},{"source":"index.ts","name":null,"original":{"line":129,"column":0},"generated":{"line":14,"column":1}},{"source":"index.ts","name":null,"original":{"line":129,"column":0},"generated":{"line":14,"column":3}},{"source":"index.ts","name":null,"original":{"line":140,"column":0},"generated":{"line":16,"column":0}},{"source":"index.ts","name":null,"original":{"line":140,"column":6},"generated":{"line":16,"column":4}},{"source":"index.ts","name":null,"original":{"line":140,"column":9},"generated":{"line":16,"column":7}},{"source":"index.ts","name":null,"original":{"line":140,"column":12},"generated":{"line":16,"column":10}},{"source":"index.ts","name":null,"original":{"line":140,"column":16},"generated":{"line":16,"column":14}},{"source":"index.ts","name":null,"original":{"line":140,"column":12},"generated":{"line":16,"column":25}},{"source":"index.ts","name":null,"original":{"line":140,"column":28},"generated":{"line":16,"column":26}},{"source":"index.ts","name":null,"original":{"line":140,"column":12},"generated":{"line":16,"column":33}},{"source":"index.ts","name":null,"original":{"line":140,"column":37},"generated":{"line":16,"column":35}},{"source":"index.ts","name":null,"original":{"line":140,"column":12},"generated":{"line":16,"column":37}},{"source":"index.ts","name":null,"original":{"line":140,"column":0},"generated":{"line":16,"column":38}},{"source":"index.ts","name":null,"original":{"line":141,"column":0},"generated":{"line":17,"column":0}},{"source":"index.ts","name":null,"original":{"line":141,"column":3},"generated":{"line":17,"column":3}},{"source":"index.ts","name":null,"original":{"line":141,"column":4},"generated":{"line":17,"column":4}},{"source":"index.ts","name":null,"original":{"line":141,"column":0},"generated":{"line":17,"column":9}},{"source":"index.ts","name":null,"original":{"line":141,"column":12},"generated":{"line":17,"column":12}},{"source":"index.ts","name":null,"original":{"line":141,"column":0},"generated":{"line":17,"column":13}},{"source":"index.ts","name":null,"original":{"line":142,"column":0},"generated":{"line":18,"column":0}},{"source":"index.ts","name":null,"original":{"line":142,"column":7},"generated":{"line":18,"column":7}},{"source":"index.ts","name":null,"original":{"line":142,"column":8},"generated":{"line":18,"column":8}},{"source":"index.ts","name":null,"original":{"line":142,"column":0},"generated":{"line":18,"column":11}},{"source":"index.ts","name":null,"original":{"line":142,"column":12},"generated":{"line":18,"column":12}},{"source":"index.ts","name":null,"original":{"line":142,"column":0},"generated":{"line":18,"column":15}}],"sources":{"index.ts":"// //tipação de variáveis\r\n\r\n// function soma(a: number ,b: number){\r\n//     return a+b;\r\n// }\r\n\r\n// // console.log(soma(`a`, `b`));// já da erro\r\n// console.log(soma(1, 2));\r\n\r\n// //types e interfaces( funcionam como as structs do C, onde definimos estruturas de dados para lidar com o código)\r\n\r\n// //interfaces\r\n\r\n// interface IAnimal{\r\n//     nome: string;\r\n//     tipo: 'terrestre' | 'aquático';\r\n//     domestico: boolean;\r\n//     executarRugido(alturaEmDecibeis: number): void;\r\n// }\r\n\r\n// interface IFelinos extends IAnimal {\r\n//     visaoNoturna: boolean;\r\n// }\r\n\r\n// const animal: IAnimal = {\r\n//     nome: 'elefante',\r\n//     tipo: 'aquático',\r\n//     domestico: false,\r\n//     executarRugido: (alturaEmDecibeis) => {console.log(`${alturaEmDecibeis}dB`)}\r\n// }\r\n\r\n// const felino: IFelinos = {\r\n//     nome: 'lince',\r\n//     tipo: 'terrestre',\r\n//     visaoNoturna: true,\r\n//     domestico: false,\r\n//     executarRugido: (alturaEmDecibeis) => {`${alturaEmDecibeis}dB`},\r\n// }\r\n\r\n// console.log(animal.nome);\r\n// animal.executarRugido(5);\r\n\r\n// //types\r\n\r\n// interface ICanino extends IAnimal{\r\n//     porte: 'pequeno' | 'médio' | 'grande';\r\n// }\r\n\r\n// type IDomestico = IFelinos | ICanino; // podemos juntar(&) ou deixar apenas um ou outro(|)\r\n\r\n// const animalCanino: IDomestico = {\r\n//     domestico: true,\r\n//     nome: 'cachorro',\r\n//     porte: 'pequeno',\r\n//     tipo: 'terrestre',\r\n//     executarRugido: (alturaEmDecibeis) => {console.log(`${alturaEmDecibeis}dB`)}\r\n// }\r\n\r\n//tratando inputs e outros elementos html\r\n\r\n// const input = document.getElementById('text') as HTMLInputElement;\r\n\r\n// input.addEventListener('input', (event) => {\r\n//     const i = event.currentTarget as HTMLInputElement;\r\n//     console.log(i.value);\r\n// })\r\n\r\n//generic Types\r\n\r\n// function substituindoApendiceALista<T>(array: T[], value: T){\r\n//     return array.map(() => value);\r\n// }\r\n\r\n// const array = [1,2,3,4,5,6];\r\n\r\n// console.log(substituindoApendiceALista(array, 1)) \r\n// console.log(substituindoApendiceALista(array, 2))\r\n// console.log(substituindoApendiceALista(['A', 'C', 'D'], 'B'))\r\n\r\n//condicionais a partir dos parâmetros\r\n\r\n// interface IUsuario{\r\n//     id: string;\r\n//     email: 'string';\r\n// }\r\n\r\n// interface IAdmin extends IUsuario{\r\n//     cargo: 'gerente' | 'coordenador' | 'Supervisor'\r\n// }\r\n\r\n// function redirecione(usuario: IUsuario | IAdmin){\r\n//     if('cargo' in usuario){\r\n//         //redirecionar para área de administração\r\n//     }\r\n    \r\n\r\n//     //redirecionar para área do usuário\r\n// }\r\n\r\n//utilizando o ?\r\n\r\n// interface IUsuario{\r\n//     id: string;\r\n//     email: 'string';\r\n//     cargo?: 'gerente' | 'gerente' | 'coordenador' | 'Supervisor'\r\n// }\r\n\r\n// function redirecione(usuario: IUsuario){\r\n//     if(usuario.cargo){\r\n//         //redirecionar(usaurio.cargo)\r\n//     }\r\n    \r\n\r\n//     //redirecionar para a área do usuário\r\n// }\r\n\r\n//utility types https://www.typescriptlang.org/docs/handbook/utility-types.html\r\n\r\ninterface Cachorro {\r\n    readonly nome: string;\r\n    readonly idade: number;\r\n    readonly parqueFavorito?: string;\r\n}\r\n\r\n// type CachorroSomenteLeitura = {\r\n//     readonly [I in keyof Cachorro]-?: Cachorro[I];//podemos retirar os elementos opcionais colocando -? após a iteração\r\n// }\r\n\r\nclass MeuCachorro implements Readonly<Cachorro> {\r\n    nome;\r\n    idade;\r\n    parqueFavorito;\r\n\r\n    constructor(nome, idade){\r\n        this.nome = nome;\r\n        this.idade = idade;\r\n    }    \r\n}\r\n\r\nconst cao = new MeuCachorro('Apolo', 14); \r\ncao.idade = 8;\r\nconsole.log(cao);"},"lineCount":null}},"error":null,"hash":"40f9ccfff48f8d67fce2a5289f6fbcf8","cacheData":{"env":{}}}